#!/bin/bash

atom_list="$(dirname "$0")/atom_list"
functionals=("O3LYP" "pbe0" "camB3LYP" "M062X")
template="$(dirname "$0")/dens_ana_template"

echo "Molecule_Name,Functional,HOMO,Theodore_EHD1,Theodore_EHD2,Theodore_EHD3,Gap1,Gap2,Gap3,CT1,CT2,CT3,S1_Initial,S2_Initial,S3_Initial,S1_Final,S2_Final,S3_Final,T1_Initial,T2_Initial,T3_Initial,T1_Final,T2_Final,T3_Final,S1_Dscf_Initial,S1_Dscf_Final,S2_Dscf_Initial,S2_Dscf_Final,CT_S1T1,CT_S1T2,CT_S2T1,CT_S2T2,PRNTO_S1T1,PRNTO_S1T2,PRNTO_S2T1,PRNTO_S2T2" > theo_ana.csv

# echo "Reading atom list from $atom_list"
if [[ $(hostname) == *"atlas"* ]]; then
  Host="hpc"
  scratch=/hpctmp/e0732532
  ORCA_ROOT=/app1/ebapps/arches/flat/software/ORCA/6.0.1-foss-2023b/bin/
  THEO_ROOT=/home/svu/e0732532/software/TheoDORE_3.2
  template=/home/svu/e0732532/bin/dens_ana_template
#   echo "atlas"
#   echo $scratch
elif [[ $(hostname) == *"asp2a"* ]]; then
  Host="nscc"
  scratch=/home/users/nus/$USER/orca_6_0_0
  # ORCA_ROOT=/home/project/11004127/Elusy/software/orca_6_0_0
  ORCA_ROOT=/home/project/11004127/software/orca601_avx2
  THEO_ROOT=/home/users/nus/e0732533/Software/TheoDORE_3.2
  template=/home/users/nus/e0732533/bin/dens_ana_template
#   echo "nscc"
elif [[ $(hostname) == *"Precision"* ]]; then
  Host="bohr"
  scratch=/home/scratch/hanqi/orca
#   echo "bohr"
fi

template="$(dirname "$0")/dens_ana_template"

molecule_list=()
accepter_list=()
donor1_list=()
donor2_list=()

while IFS=$'\t' read -r molecule Accepter Donor1 Donor2; do
  molecule_list+=("$molecule")
  accepter_list+=("$Accepter")
  donor1_list+=("$Donor1")
  donor2_list+=("$Donor2")
done < "$atom_list"

# echo "Molecule list: ${molecule_list[@]}" # ; echo "Accepter list: ${accepter_list[@]}" ; echo "Donor1 list: ${donor1_list[@]}" ; echo "Donor2 list: ${donor2_list[@]}"

# molecule_list=("${molecule_list[0]}")
# accepter_list=("${accepter_list[0]}")
# donor1_list=("${donor1_list[0]}")
# donor2_list=("${donor2_list[0]}")

# echo "Molecule list: ${molecule_list[@]}"
if [ -n "$1" ]; then
  molecule_list=("$1")
  index=-1
  for i in "${!molecule_list[@]}"; do
    if [[ "${molecule_list[$i]}" == "$1" ]]; then
      index=$i
      break
    fi
  done
  accepter_list=("${accepter_list[$index]}")
  donor1_list=("${donor1_list[$index]}")
  donor2_list=("${donor2_list[$index]}")
fi

i=0
for molecule in "${molecule_list[@]}"; do
  molecule=${molecule_list[$i]}
  accepter=${accepter_list[$i]}
  donor1=${donor1_list[$i]}
  # echo "Molecule: $molecule"  ; echo "Accepter: $accepter"; echo "Donor1: $donor1"; echo "Donor2: $donor2"
  if [ -z $1 ]; then 
    cd $molecule
  fi
  for f in 0 1 2 3; do
    func=${functionals[$f]}
    FLUO=${molecule}_${func}_svp_s1_tddft_scf
    DSCF_S1=${molecule}_${func}_svp_s1_Dscf_optfreq
    DSCF_S2=${molecule}_${func}_svp_s2_Dscf_optfreq
    echo "-------------------------------------------------------"
    echo "Calculating e-h distance for $FLUO"
    $ORCA_ROOT/orca_2mkl $FLUO -molden  > /dev/null 2>&1
    sed -e "s/NAME/$FLUO/g" $template > den_ana_$FLUO.in
    sed -i "s/DONOR/$donor1/g" den_ana_$FLUO.in
    sed -i "s/ACCEPTOR/$accepter/g" den_ana_$FLUO.in

    HOMO=$(ORCA-GrepHOMO -q $FLUO.out)

    S1_Initial_1=$(ORCA-GrepExcitation -i $FLUO.out)
    S1_Initial_2=$(ORCA-GrepExcitation -i -s 2 $FLUO.out)
    S1_Initial_3=$(ORCA-GrepExcitation -i -s 3 $FLUO.out)
    S1_Final_1=$(ORCA-GrepExcitation -f $FLUO.out)
    S1_Final_2=$(ORCA-GrepExcitation -f -s 2 $FLUO.out)
    S1_Final_3=$(ORCA-GrepExcitation -f -s 3 $FLUO.out)
    T1_Initial_1=$(ORCA-GrepExcitation -i -s 11 $FLUO.out)
    T1_Initial_2=$(ORCA-GrepExcitation -i -s 12 $FLUO.out)
    T1_Initial_3=$(ORCA-GrepExcitation -i -s 13 $FLUO.out)
    T1_Final_1=$(ORCA-GrepExcitation -f -s 11 $FLUO.out)
    T1_Final_2=$(ORCA-GrepExcitation -f -s 12 $FLUO.out)
    T1_Final_3=$(ORCA-GrepExcitation -f -s 13 $FLUO.out)
    
    if [ -f $DSCF_S1.out ];then
      S1_Dscf_Initial=$(ORCA-chkOrbital -q $DSCF_S1.out | awk '{print $1}')
      S1_Dscf_Final=$(ORCA-chkOrbital -q $DSCF_S1.out | awk '{print $3}') 
      echo "S1_Dscf_excit: $S1_Dscf_Initial -> $S1_Dscf_Final"
    else
      S1_Dscf_Initial=0
      S1_Dscf_Final=0
    fi

    if [ -f $DSCF_S2.out ]; then
      S2_Dscf_Initial=$(ORCA-chkOrbital -q $DSCF_S2.out | awk '{print $1}')
      S2_Dscf_Final=$(ORCA-chkOrbital -q $DSCF_S2.out | awk '{print $3}') 
      echo "S2_Dscf_excit: $S2_Dscf_Initial -> $S2_Dscf_Final" 
    else
      S2_Dscf_Initial=0
      S2_Dscf_Final=0
    fi

    $ORCA_ROOT/orca_2mkl $input -molden > /dev/null 2>&1
    cp $FLUO.cis orca.cis
    theodore analyze_tden -f den_ana_$FLUO.in > summ_den_ana_$FLUO.txt
    EHD1=$(grep "1(1)A " theo_$FLUO.txt | awk '{print $9}')
    EHD2=$(grep "2(1)A " theo_$FLUO.txt | awk '{print $9}')
    EHD3=$(grep "3(1)A " theo_$FLUO.txt | awk '{print $9}')
    gap1=$(grep "1(1)A " theo_$FLUO.txt | awk '{print $2}')
    gap2=$(grep "2(1)A " theo_$FLUO.txt | awk '{print $2}')
    gap3=$(grep "3(1)A " theo_$FLUO.txt | awk '{print $2}')
    CT1=$(grep "1(1)A " theo_$FLUO.txt | awk '{print $7}')
    CT2=$(grep "2(1)A " theo_$FLUO.txt | awk '{print $7}')
    CT3=$(grep "3(1)A " theo_$FLUO.txt | awk '{print $7}')
    echo "e-h disctance for $func: $EHD1, $EHD2, $EHD3"
    # echo "Gap for $func: $gap1, $gap2, $gap3"
    echo "CT for $func: $CT1, $CT2, $CT3"
    theodore analyze_tden_es2es -r 1 -f den_ana_$FLUO.in > summ_den_ana_es2es_s1_$FLUO.txt
    theodore analyze_tden_es2es -r 2 -f den_ana_$FLUO.in > summ_den_ana_es2es_s2_$FLUO.txt
    CT_S1T1=$(grep "1(3)A " summ_den_ana_es2es_s1_$FLUO.txt | awk '{print $7}')
    CT_S1T2=$(grep "2(3)A " summ_den_ana_es2es_s1_$FLUO.txt | awk '{print $7}')
    CT_S2T1=$(grep "1(3)A " summ_den_ana_es2es_s2_$FLUO.txt | awk '{print $7}')
    CT_S2T2=$(grep "2(3)A " summ_den_ana_es2es_s2_$FLUO.txt | awk '{print $7}')
    PRNTO_S1T1=$(grep "1(3)A " summ_den_ana_es2es_s1_$FLUO.txt | awk '{print $14}')
    PRNTO_S1T2=$(grep "2(3)A " summ_den_ana_es2es_s1_$FLUO.txt | awk '{print $14}')
    PRNTO_S2T1=$(grep "1(3)A " summ_den_ana_es2es_s2_$FLUO.txt | awk '{print $14}')
    PRNTO_S2T2=$(grep "2(3)A " summ_den_ana_es2es_s2_$FLUO.txt | awk '{print $14}')

    echo "$molecule,$func,$HOMO,$EHD1,$EHD2,$EHD3,$gap1,$gap2,$gap3,$CT1,$CT2,$CT3,$S1_Initial_1,$S1_Initial_2,$S1_Initial_3,$S1_Final_1,$S1_Final_2,$S1_Final_3,$T1_Initial_1,$T1_Initial_2,$T1_Initial_3,$T1_Final_1,$T1_Final_2,$T1_Final_3,$S1_Dscf_Initial,$S1_Dscf_Final,$S2_Dscf_Initial,$S2_Dscf_Final,$CT_S1T1,$CT_S1T2,$CT_S2T1,$CT_S2T2,$PRNTO_S1T1,$PRNTO_S1T2,$PRNTO_S2T1,$PRNTO_S2T2" >> ../theo_ana.csv

  done
  if [ -z $1 ]; then
    cd ..
  fi
  i=$((i+1))
done

exit 0